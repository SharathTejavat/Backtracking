#include<stdio.h>
int min=999999;

int issafe(int k,int i,int a[],int n,int adj[][n])
{int l;
 if(k<(n-1))
 { 
   for(l=0;l<k;l++)
   { 
     if(a[l]==i||adj[a[k-1]][i]==0)
      return 0;
    }
    return 1;
  }
 else
 { 
   for(l=0;l<k;l++)
   { 
     if(a[l]==i||adj[a[k-1]][i]==0||adj[i][0]==0)
      return 0;
    }
    return 1;
  }
}
  
 
void hamilton(int k,int n,int a[],int adj[][n],int wt[][n],int t[])
{ 
  int i;
  if(k==n)
    { 
      int m;
      int s=0;
      for(m=1;m<=n;m++)
      { 
        if(m==n)
        s=s+wt[a[m-1]][a[0]];
        else
        s=s+wt[a[m-1]][a[m]];
      }
       if(s<min)
       { 
         min=s;
         for(m=0;m<n;m++)
         t[m]=a[m];
       }
     }
 
  for(i=1;i<n;i++)
  { 
    if(issafe(k,i,a,n,adj))
    { 
      a[k]=i;
      hamilton(k+1,n,a,adj,wt,t);
     }
  }
}
    
int main()
{ 
  int n,i,j;
  printf("enter n");
  scanf("%d",&n);
  int adj[n][n];
  for(i=0;i<n;i++)
  { 
    printf("enter for %d",i);
    for(j=0;j<n;j++)
    {
     scanf("%d",&adj[i][j]);
     }
  }
  int wt[n][n];
  printf("enter costs of nodes");
  for(i=0;i<n;i++)
  { 
    printf("enter costs for %d",i);
    for(j=0;j<n;j++)
    {
     scanf("%d",&wt[i][j]);
     }
   }
   int t[n];
  int a[n];
  a[0]=0;
  hamilton(1,n,a,adj,wt,t);
  printf("\n min is %d\n",min);
  for(i=0;i<n;i++)
  printf("%d ",t[i]);
  
 }
  
